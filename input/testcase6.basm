$FUN $0 args:1 parent:$0
LDV [1,2,3,4,5]
BST 0 0
LDF $1
BST 0 1
BLD 0 1
APP 1
PRN
HLT
$END $0


$FUN $1 args:1 parent: $0
LDF $2              ; carga la lista
APP 1
BST 0 0             ; almacena la lista 
LDV 0               ; carga 0
BST 0 1             ; inicio = 0
BLD 0 0             ; carga lista
LDV 1
SUB
BST 0 2             ; fin = lista.length - 1

; While: inicio < fin
BLD 0 1             ; carga inicio
BLD 0 2             ; carga fin
LT
BF +21              ; sale del ciclo si inicio >= fin 

; Comparaci√≥n de lista[inicio] y lista[fin]
; INI LOOP
BLD 0 0             ; carga la lista
BLD 0 1             ; carga inicio
LTK                 ; lista[inicio]
BST 0 3             ; almacena lista[inicio]
BLD 0 0             ; carga la lista
BLD 0 2             ; carga fin
LTK                 ; lista[fin]
BST 0 4             ; almacena lista[fin] en 4
BLD 0 3             ; carga lista[inicio]
BLD 0 4             ; carga lista[fin]
EQ
BF +12              ; si no son iguales, RETURN FALSE
BLD 0 1             ; carga inicio
LDV 1
ADD                 ; inicio++
BST 0 1             ; actualiza inicio
BLD 0 2             ; carga fin
LDV 1
SUB                 ; fin--
BST 0 2             ; actualiza fin
BR -23              ; 
;RET LOOP
LDV 1               ; return 1
RET
BR +2
LDV 0               ; return 0
RET
$END $2


$FUN $2 args:1 parent:$1
LDV 1
BST 0 0
BLD 2 0
BLD 0 0
LTK
LNT
BT +5
BLD 0 0
LDV 1
ADD
BST 0 0
BR -10
BLD 0 0
RET
$END $2